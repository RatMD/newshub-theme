##
==
<?
function onEnd()
{
    $config = $this['options'];
    $firstTitle = $config['widget_title_as_first'] === '1';
    $useJavaScript = $config['widget_js_anchors'] === '1';

    // Fetch Header
    if (!isset($this->content_elements)) {
        $content = $this->page->content;
    preg_match_all('/<h([1-6])(?:[^\>]+)?>(.*?)<\/h\1>/', $content, $matches);
    $count = count($matches[0]);
    } else {
        $count = 0;
        $matches = [[], [], []];

        foreach ($this->content_elements AS $ce) {
            if (empty($ce['layout'])) {
                continue;
            }
            if (!is_string($ce['layout']) || $ce['layout'] === 'hidden') {
                continue;
            }
            $matches[1][] = substr($ce['layout'], 1);
            $matches[2][] = $ce['title'];
            $count++;
        }
    }

    $result = [];

    $keys = [];
    $current = &$result;
    $currentId = 0;
    $currentLevel = 0;
    $walker = [];
    for ($i = 0; $i < $count; $i++) {
        if (strpos($matches[2][$i], '<!-- notoc -->') === 0) {
            continue;
        }
        if (strpos($matches[2][$i], '<!--notoc-->') === 0) {
            continue;
        }

        $level = intval($matches[1][$i]);
        $label = $matches[2][$i];

        // Prepend Page Title
        if ($level > 1 && empty($result) && $firstTitle) {
            $id = 'root';
            $current[$id] = [
                'id'        => $id,
                'level'     => 1,
                'label'     => $this->page->title,
                'children'  => []
            ];
            $currentLevel = 1;
            $walker[] = $id;
            $currentId = $id;
        }

        // Generate Unique id
        $id = strtolower(preg_replace('/[ ]+/', '_',
            preg_replace('/[^a-zA-Z0-9_ ]/', '', $label)
        ));
        $temp = 0;
        while (array_key_exists($id, $keys)) {
            if ($temp > 0) {
                $id = substr($id, 0, -strlen(strval($temp)));
            }
            $id = $id . '_' . ++$temp;
        }
        $keys[] = $id;

        // Go one level deeper
        if ($level > $currentLevel) {
            $walker[] = $id;
            $current = &$current[$currentId]['children'];
            $currentLevel = $level;

        // Travel back by x levels
        } else if ($level < $currentLevel) {
            $length = $level - $currentLevel;
            $walker = array_slice($walker, 0, $length-1);
            $current = &$result;
            foreach ($walker AS $prevId) {
                $current = &$current[$prevId]['children'];
            }
            $walker[] = $id;
            $currentLevel = $level;
        }

        // Set Element
        $current[$id] = [
            'id'        => $id,
            'level'     => $level,
            'label'     => $label,
            'children'  => []
        ];
        $currentId = $id; 
    }
    $this['toc'] = $result;
    $this['toc_js'] = $useJavaScript;
}
?>
==
{% from "page/macros.htm" import toc_builder %}

{% if toc %}
    <div class="card card-simple">
        {% if widget.widget_title or widget.widget_subtitle %}
            <div class="card-header">
                {% if widget.widget_title or widget.widget_subtitle %}
                    <h2 class="card-title">{{ widget.widget_title }}</h2>
                {% endif %}
                {% if widget.widget_title or widget.widget_subtitle %}
                    <span class="card-subtitle">{{ widget.widget_subtitle }}</span>
                {% endif %}
            </div>
        {% endif %}

        <div class="card-body">
            {{ toc_builder(toc) }}
        </div>
    </div>
{% endif %}